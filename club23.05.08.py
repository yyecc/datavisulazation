# -*- coding: utf-8 -*-
"""23.05.08 동아리

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10sEwVefXBK82iA0S756adfcEK9cCPJU0
"""

import matplotlib.pyplot as plt
import numpy as np

# Constants
G = 6.6743e-11   # gravitational constant
M = 1.9891e30    # mass of the sun

# Initial conditions
r = np.array([147e9, 0])    # initial position
v = np.array([0, 30300])   # initial velocity

# Time step and duration
dt = 3600*24            # time step in seconds
T = 365.24*3600*24      # duration in seconds

# Array to store position and velocity
n = int(T/dt) + 1
pos = np.zeros((n, 2))
vel = np.zeros((n, 2))

# Set initial position and velocity
pos[0] = r
vel[0] = v

# Compute position and velocity for each time step
for i in range(1, n):
    # Compute gravitational force on the planet
    F = -G*M*pos[i-1]/np.linalg.norm(pos[i-1])**3

    # Update velocity using the force and time step
    vel[i] = vel[i-1] + F*dt

    # Update position using the velocity and time step
    pos[i] = pos[i-1] + vel[i]*dt

# Plot the trajectory of the planet
plt.plot(pos[:,0], pos[:,1])
plt.xlabel('x')
plt.ylabel('y')
plt.show()

import matplotlib.pyplot as plt
import numpy as np

# 상수
G = 6.6743e-11   # 만유인력상수
M = 1.9891e30    # 태양 질량

# 초기 조건
r = np.array([147e9, 0])    # 초기 위치
v = np.array([0, 30300])   # 초기 속도

# 시간 및 배열
dt = 3600*24            # 시간 간격 (초)
T = 365.24*3600*24      # 총 시간 (초)
n = int(T/dt) + 1       # 시간 간격으로 나눈 배열의 크기
pos = np.zeros((n, 2))  # 위치를 저장하는 배열
vel = np.zeros((n, 2))  # 속도를 저장하는 배열

# 초기 위치와 속도 저장
pos[0] = r
vel[0] = v

# 각 시간 단계에서 위치와 속도 계산
for i in range(1, n):
    # 중력 벡터 계산
    F = -G*M*pos[i-1]/np.linalg.norm(pos[i-1])**3

    # 속도 갱신
    vel[i] = vel[i-1] + F*dt

    # 위치 갱신
    pos[i] = pos[i-1] + vel[i]*dt

# 궤도 출력
plt.plot(pos[:,0], pos[:,1])
plt.xlabel('x')
plt.ylabel('y')