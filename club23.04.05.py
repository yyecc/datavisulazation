# -*- coding: utf-8 -*-
"""동아리 23.04.05

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QarMjvNwOHmXhDqJI7LyzESsjjbovtsd
"""

#나눔 폰트 실행
!sudo apt-get install -y fonts-nanum
!sudo fc-cache -fv
!rm ~/.cache/matplotlib -rf

import matplotlib
matplotlib.rcParams['font.family']='NanumGothic'
matplotlib.rcParams['font.size']=15 #글자크기
matplotlib.rcParams['axes.unicode_minus']=False

import matplotlib.pyplot as plt

plt.rc('font', family='NanumBarunGothic')

#운동량 보존 법칙
import matplotlib.pyplot as plt

# 입력 받기
m1 = float(input("첫 번째 물체의 질량을 입력하세요(kg): "))
v1 = float(input("첫 번째 물체의 초기 속도를 입력하세요(m/s): "))
m2 = float(input("두 번째 물체의 질량을 입력하세요(kg): "))

# 운동량 보존 법칙
v2 = (m1*v1)/(m1+m2)
v1_after = (v1*(m1-m2))/(m1+m2)
v2_after = (2*m1*v1)/(m1+m2)

# 그래프 시각화
x = [1,2]
y = [m1*v1, m2*v2]
colors=['r', 'b']
plt.bar(x, y, color = colors, alpha= 0.7, width=0.2)
plt.xticks(x, ['물체1', '물체2'])
plt.xlabel('물체')
plt.ylabel('운동량 (kg m/s)')
plt.title('운동량 보존 법칙')
plt.show()

print("물체1 충돌 후 속도: ", v1_after, "m/s")
print("물체2 충돌 후 속도: ", v2_after, "m/s")

#자유 낙하 운동
import matplotlib.pyplot as plt
import math

# 상수
g = 10 # 중력 가속도

# 입력
h = float(input("물체의 높이를 입력하세요(m): "))
v0 = float(input("물체의 초기 속도를 입력하세요(m/s): "))

# 비행 시간 및 시간 간격 계산
t_max = math.sqrt(2*h/g)
dt = t_max/100

# 물체의 궤적 계산
x = []
y = []
t = 0
while t <= t_max:
    x.append(v0*t)
    y.append(h - 0.5*g*t**2)
    t += dt

# 물체의 궤적을 그래프로 표시
plt.plot(x, y, mfc='b', marker='o', ms=3)
plt.title("자유낙하 운동")
plt.xlabel("수평 거리 (m)")
plt.ylabel("높이 (m)")
plt.figure(figsize=(2,4),facecolor='#34b1eb', dpi =78)
plt.show()

